"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/gray-matter";
exports.ids = ["vendor-chunks/gray-matter"];
exports.modules = {

/***/ "(rsc)/./node_modules/gray-matter/index.js":
/*!*******************************************!*\
  !*** ./node_modules/gray-matter/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst sections = __webpack_require__(/*! section-matter */ \"(rsc)/./node_modules/section-matter/index.js\");\nconst defaults = __webpack_require__(/*! ./lib/defaults */ \"(rsc)/./node_modules/gray-matter/lib/defaults.js\");\nconst stringify = __webpack_require__(/*! ./lib/stringify */ \"(rsc)/./node_modules/gray-matter/lib/stringify.js\");\nconst excerpt = __webpack_require__(/*! ./lib/excerpt */ \"(rsc)/./node_modules/gray-matter/lib/excerpt.js\");\nconst engines = __webpack_require__(/*! ./lib/engines */ \"(rsc)/./node_modules/gray-matter/lib/engines.js\");\nconst toFile = __webpack_require__(/*! ./lib/to-file */ \"(rsc)/./node_modules/gray-matter/lib/to-file.js\");\nconst parse = __webpack_require__(/*! ./lib/parse */ \"(rsc)/./node_modules/gray-matter/lib/parse.js\");\nconst utils = __webpack_require__(/*! ./lib/utils */ \"(rsc)/./node_modules/gray-matter/lib/utils.js\");\n/**\n * Takes a string or object with `content` property, extracts\n * and parses front-matter from the string, then returns an object\n * with `data`, `content` and other [useful properties](#returned-object).\n *\n * ```js\n * const matter = require('gray-matter');\n * console.log(matter('---\\ntitle: Home\\n---\\nOther stuff'));\n * //=> { data: { title: 'Home'}, content: 'Other stuff' }\n * ```\n * @param {Object|String} `input` String, or object with `content` string\n * @param {Object} `options`\n * @return {Object}\n * @api public\n */ function matter(input, options) {\n    if (input === \"\") {\n        return {\n            data: {},\n            content: input,\n            excerpt: \"\",\n            orig: input\n        };\n    }\n    let file = toFile(input);\n    const cached = matter.cache[file.content];\n    if (!options) {\n        if (cached) {\n            file = Object.assign({}, cached);\n            file.orig = cached.orig;\n            return file;\n        }\n        // only cache if there are no options passed. if we cache when options\n        // are passed, we would need to also cache options values, which would\n        // negate any performance benefits of caching\n        matter.cache[file.content] = file;\n    }\n    return parseMatter(file, options);\n}\n/**\n * Parse front matter\n */ function parseMatter(file, options) {\n    const opts = defaults(options);\n    const open = opts.delimiters[0];\n    const close = \"\\n\" + opts.delimiters[1];\n    let str = file.content;\n    if (opts.language) {\n        file.language = opts.language;\n    }\n    // get the length of the opening delimiter\n    const openLen = open.length;\n    if (!utils.startsWith(str, open, openLen)) {\n        excerpt(file, opts);\n        return file;\n    }\n    // if the next character after the opening delimiter is\n    // a character from the delimiter, then it's not a front-\n    // matter delimiter\n    if (str.charAt(openLen) === open.slice(-1)) {\n        return file;\n    }\n    // strip the opening delimiter\n    str = str.slice(openLen);\n    const len = str.length;\n    // use the language defined after first delimiter, if it exists\n    const language = matter.language(str, opts);\n    if (language.name) {\n        file.language = language.name;\n        str = str.slice(language.raw.length);\n    }\n    // get the index of the closing delimiter\n    let closeIndex = str.indexOf(close);\n    if (closeIndex === -1) {\n        closeIndex = len;\n    }\n    // get the raw front-matter block\n    file.matter = str.slice(0, closeIndex);\n    const block = file.matter.replace(/^\\s*#[^\\n]+/gm, \"\").trim();\n    if (block === \"\") {\n        file.isEmpty = true;\n        file.empty = file.content;\n        file.data = {};\n    } else {\n        // create file.data by parsing the raw file.matter block\n        file.data = parse(file.language, file.matter, opts);\n    }\n    // update file.content\n    if (closeIndex === len) {\n        file.content = \"\";\n    } else {\n        file.content = str.slice(closeIndex + close.length);\n        if (file.content[0] === \"\\r\") {\n            file.content = file.content.slice(1);\n        }\n        if (file.content[0] === \"\\n\") {\n            file.content = file.content.slice(1);\n        }\n    }\n    excerpt(file, opts);\n    if (opts.sections === true || typeof opts.section === \"function\") {\n        sections(file, opts.section);\n    }\n    return file;\n}\n/**\n * Expose engines\n */ matter.engines = engines;\n/**\n * Stringify an object to YAML or the specified language, and\n * append it to the given string. By default, only YAML and JSON\n * can be stringified. See the [engines](#engines) section to learn\n * how to stringify other languages.\n *\n * ```js\n * console.log(matter.stringify('foo bar baz', {title: 'Home'}));\n * // results in:\n * // ---\n * // title: Home\n * // ---\n * // foo bar baz\n * ```\n * @param {String|Object} `file` The content string to append to stringified front-matter, or a file object with `file.content` string.\n * @param {Object} `data` Front matter to stringify.\n * @param {Object} `options` [Options](#options) to pass to gray-matter and [js-yaml].\n * @return {String} Returns a string created by wrapping stringified yaml with delimiters, and appending that to the given string.\n * @api public\n */ matter.stringify = function(file, data, options) {\n    if (typeof file === \"string\") file = matter(file, options);\n    return stringify(file, data, options);\n};\n/**\n * Synchronously read a file from the file system and parse\n * front matter. Returns the same object as the [main function](#matter).\n *\n * ```js\n * const file = matter.read('./content/blog-post.md');\n * ```\n * @param {String} `filepath` file path of the file to read.\n * @param {Object} `options` [Options](#options) to pass to gray-matter.\n * @return {Object} Returns [an object](#returned-object) with `data` and `content`\n * @api public\n */ matter.read = function(filepath, options) {\n    const str = fs.readFileSync(filepath, \"utf8\");\n    const file = matter(str, options);\n    file.path = filepath;\n    return file;\n};\n/**\n * Returns true if the given `string` has front matter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Boolean} True if front matter exists.\n * @api public\n */ matter.test = function(str, options) {\n    return utils.startsWith(str, defaults(options).delimiters[0]);\n};\n/**\n * Detect the language to use, if one is defined after the\n * first front-matter delimiter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Object} Object with `raw` (actual language string), and `name`, the language with whitespace trimmed\n */ matter.language = function(str, options) {\n    const opts = defaults(options);\n    const open = opts.delimiters[0];\n    if (matter.test(str)) {\n        str = str.slice(open.length);\n    }\n    const language = str.slice(0, str.search(/\\r?\\n/));\n    return {\n        raw: language,\n        name: language ? language.trim() : \"\"\n    };\n};\n/**\n * Expose `matter`\n */ matter.cache = {};\nmatter.clearCache = function() {\n    matter.cache = {};\n};\nmodule.exports = matter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/defaults.js":
/*!**************************************************!*\
  !*** ./node_modules/gray-matter/lib/defaults.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst engines = __webpack_require__(/*! ./engines */ \"(rsc)/./node_modules/gray-matter/lib/engines.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/gray-matter/lib/utils.js\");\nmodule.exports = function(options) {\n    const opts = Object.assign({}, options);\n    // ensure that delimiters are an array\n    opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || \"---\");\n    if (opts.delimiters.length === 1) {\n        opts.delimiters.push(opts.delimiters[0]);\n    }\n    opts.language = (opts.language || opts.lang || \"yaml\").toLowerCase();\n    opts.engines = Object.assign({}, engines, opts.parsers, opts.engines);\n    return opts;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL2RlZmF1bHRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsUUFBUUQsbUJBQU9BLENBQUM7QUFFdEJFLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxPQUFPO0lBQy9CLE1BQU1DLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdIO0lBRS9CLHNDQUFzQztJQUN0Q0MsS0FBS0csVUFBVSxHQUFHUCxNQUFNUSxRQUFRLENBQUNKLEtBQUtLLE1BQU0sSUFBSUwsS0FBS0csVUFBVSxJQUFJO0lBQ25FLElBQUlILEtBQUtHLFVBQVUsQ0FBQ0csTUFBTSxLQUFLLEdBQUc7UUFDaENOLEtBQUtHLFVBQVUsQ0FBQ0ksSUFBSSxDQUFDUCxLQUFLRyxVQUFVLENBQUMsRUFBRTtJQUN6QztJQUVBSCxLQUFLUSxRQUFRLEdBQUcsQ0FBQ1IsS0FBS1EsUUFBUSxJQUFJUixLQUFLUyxJQUFJLElBQUksTUFBSyxFQUFHQyxXQUFXO0lBQ2xFVixLQUFLTixPQUFPLEdBQUdPLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdSLFNBQVNNLEtBQUtXLE9BQU8sRUFBRVgsS0FBS04sT0FBTztJQUNwRSxPQUFPTTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXRoZW9yeS1ibG9nLy4vbm9kZV9tb2R1bGVzL2dyYXktbWF0dGVyL2xpYi9kZWZhdWx0cy5qcz84NGNkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZW5naW5lcyA9IHJlcXVpcmUoJy4vZW5naW5lcycpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBjb25zdCBvcHRzID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG5cbiAgLy8gZW5zdXJlIHRoYXQgZGVsaW1pdGVycyBhcmUgYW4gYXJyYXlcbiAgb3B0cy5kZWxpbWl0ZXJzID0gdXRpbHMuYXJyYXlpZnkob3B0cy5kZWxpbXMgfHwgb3B0cy5kZWxpbWl0ZXJzIHx8ICctLS0nKTtcbiAgaWYgKG9wdHMuZGVsaW1pdGVycy5sZW5ndGggPT09IDEpIHtcbiAgICBvcHRzLmRlbGltaXRlcnMucHVzaChvcHRzLmRlbGltaXRlcnNbMF0pO1xuICB9XG5cbiAgb3B0cy5sYW5ndWFnZSA9IChvcHRzLmxhbmd1YWdlIHx8IG9wdHMubGFuZyB8fCAneWFtbCcpLnRvTG93ZXJDYXNlKCk7XG4gIG9wdHMuZW5naW5lcyA9IE9iamVjdC5hc3NpZ24oe30sIGVuZ2luZXMsIG9wdHMucGFyc2Vycywgb3B0cy5lbmdpbmVzKTtcbiAgcmV0dXJuIG9wdHM7XG59O1xuIl0sIm5hbWVzIjpbImVuZ2luZXMiLCJyZXF1aXJlIiwidXRpbHMiLCJtb2R1bGUiLCJleHBvcnRzIiwib3B0aW9ucyIsIm9wdHMiLCJPYmplY3QiLCJhc3NpZ24iLCJkZWxpbWl0ZXJzIiwiYXJyYXlpZnkiLCJkZWxpbXMiLCJsZW5ndGgiLCJwdXNoIiwibGFuZ3VhZ2UiLCJsYW5nIiwidG9Mb3dlckNhc2UiLCJwYXJzZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/defaults.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/engine.js":
/*!************************************************!*\
  !*** ./node_modules/gray-matter/lib/engine.js ***!
  \************************************************/
/***/ ((module) => {

eval("\nmodule.exports = function(name, options) {\n    let engine = options.engines[name] || options.engines[aliase(name)];\n    if (typeof engine === \"undefined\") {\n        throw new Error('gray-matter engine \"' + name + '\" is not registered');\n    }\n    if (typeof engine === \"function\") {\n        engine = {\n            parse: engine\n        };\n    }\n    return engine;\n};\nfunction aliase(name) {\n    switch(name.toLowerCase()){\n        case \"js\":\n        case \"javascript\":\n            return \"javascript\";\n        case \"coffee\":\n        case \"coffeescript\":\n        case \"cson\":\n            return \"coffee\";\n        case \"yaml\":\n        case \"yml\":\n            return \"yaml\";\n        default:\n            {\n                return name;\n            }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL2VuZ2luZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsSUFBSSxFQUFFQyxPQUFPO0lBQ3JDLElBQUlDLFNBQVNELFFBQVFFLE9BQU8sQ0FBQ0gsS0FBSyxJQUFJQyxRQUFRRSxPQUFPLENBQUNDLE9BQU9KLE1BQU07SUFDbkUsSUFBSSxPQUFPRSxXQUFXLGFBQWE7UUFDakMsTUFBTSxJQUFJRyxNQUFNLHlCQUF5QkwsT0FBTztJQUNsRDtJQUNBLElBQUksT0FBT0UsV0FBVyxZQUFZO1FBQ2hDQSxTQUFTO1lBQUVJLE9BQU9KO1FBQU87SUFDM0I7SUFDQSxPQUFPQTtBQUNUO0FBRUEsU0FBU0UsT0FBT0osSUFBSTtJQUNsQixPQUFRQSxLQUFLTyxXQUFXO1FBQ3RCLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNILE9BQU87UUFDVCxLQUFLO1FBQ0wsS0FBSztZQUNILE9BQU87UUFDVDtZQUFTO2dCQUNQLE9BQU9QO1lBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXRoZW9yeS1ibG9nLy4vbm9kZV9tb2R1bGVzL2dyYXktbWF0dGVyL2xpYi9lbmdpbmUuanM/Y2MyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmFtZSwgb3B0aW9ucykge1xuICBsZXQgZW5naW5lID0gb3B0aW9ucy5lbmdpbmVzW25hbWVdIHx8IG9wdGlvbnMuZW5naW5lc1thbGlhc2UobmFtZSldO1xuICBpZiAodHlwZW9mIGVuZ2luZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2dyYXktbWF0dGVyIGVuZ2luZSBcIicgKyBuYW1lICsgJ1wiIGlzIG5vdCByZWdpc3RlcmVkJyk7XG4gIH1cbiAgaWYgKHR5cGVvZiBlbmdpbmUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBlbmdpbmUgPSB7IHBhcnNlOiBlbmdpbmUgfTtcbiAgfVxuICByZXR1cm4gZW5naW5lO1xufTtcblxuZnVuY3Rpb24gYWxpYXNlKG5hbWUpIHtcbiAgc3dpdGNoIChuYW1lLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdqcyc6XG4gICAgY2FzZSAnamF2YXNjcmlwdCc6XG4gICAgICByZXR1cm4gJ2phdmFzY3JpcHQnO1xuICAgIGNhc2UgJ2NvZmZlZSc6XG4gICAgY2FzZSAnY29mZmVlc2NyaXB0JzpcbiAgICBjYXNlICdjc29uJzpcbiAgICAgIHJldHVybiAnY29mZmVlJztcbiAgICBjYXNlICd5YW1sJzpcbiAgICBjYXNlICd5bWwnOlxuICAgICAgcmV0dXJuICd5YW1sJztcbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsIm9wdGlvbnMiLCJlbmdpbmUiLCJlbmdpbmVzIiwiYWxpYXNlIiwiRXJyb3IiLCJwYXJzZSIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/engine.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/engines.js":
/*!*************************************************!*\
  !*** ./node_modules/gray-matter/lib/engines.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst yaml = __webpack_require__(/*! js-yaml */ \"(rsc)/./node_modules/js-yaml/index.js\");\n/**\n * Default engines\n */ const engines = exports = module.exports;\n/**\n * YAML\n */ engines.yaml = {\n    parse: yaml.safeLoad.bind(yaml),\n    stringify: yaml.safeDump.bind(yaml)\n};\n/**\n * JSON\n */ engines.json = {\n    parse: JSON.parse.bind(JSON),\n    stringify: function(obj, options) {\n        const opts = Object.assign({\n            replacer: null,\n            space: 2\n        }, options);\n        return JSON.stringify(obj, opts.replacer, opts.space);\n    }\n};\n/**\n * JavaScript\n */ engines.javascript = {\n    parse: function parse(str, options, wrap) {\n        /* eslint no-eval: 0 */ try {\n            if (wrap !== false) {\n                str = \"(function() {\\nreturn \" + str.trim() + \";\\n}());\";\n            }\n            return eval(str) || {};\n        } catch (err) {\n            if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n                return parse(str, options, false);\n            }\n            throw new SyntaxError(err);\n        }\n    },\n    stringify: function() {\n        throw new Error(\"stringifying JavaScript is not supported\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL2VuZ2luZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVyQjs7Q0FFQyxHQUVELE1BQU1DLFVBQVVDLFVBQVVDLE9BQU9ELE9BQU87QUFFeEM7O0NBRUMsR0FFREQsUUFBUUYsSUFBSSxHQUFHO0lBQ2JLLE9BQU9MLEtBQUtNLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDUDtJQUMxQlEsV0FBV1IsS0FBS1MsUUFBUSxDQUFDRixJQUFJLENBQUNQO0FBQ2hDO0FBRUE7O0NBRUMsR0FFREUsUUFBUVEsSUFBSSxHQUFHO0lBQ2JMLE9BQU9NLEtBQUtOLEtBQUssQ0FBQ0UsSUFBSSxDQUFDSTtJQUN2QkgsV0FBVyxTQUFTSSxHQUFHLEVBQUVDLE9BQU87UUFDOUIsTUFBTUMsT0FBT0MsT0FBT0MsTUFBTSxDQUFDO1lBQUNDLFVBQVU7WUFBTUMsT0FBTztRQUFDLEdBQUdMO1FBQ3ZELE9BQU9GLEtBQUtILFNBQVMsQ0FBQ0ksS0FBS0UsS0FBS0csUUFBUSxFQUFFSCxLQUFLSSxLQUFLO0lBQ3REO0FBQ0Y7QUFFQTs7Q0FFQyxHQUVEaEIsUUFBUWlCLFVBQVUsR0FBRztJQUNuQmQsT0FBTyxTQUFTQSxNQUFNZSxHQUFHLEVBQUVQLE9BQU8sRUFBRVEsSUFBSTtRQUN0QyxxQkFBcUIsR0FDckIsSUFBSTtZQUNGLElBQUlBLFNBQVMsT0FBTztnQkFDbEJELE1BQU0sMkJBQTJCQSxJQUFJRSxJQUFJLEtBQUs7WUFDaEQ7WUFDQSxPQUFPQyxLQUFLSCxRQUFRLENBQUM7UUFDdkIsRUFBRSxPQUFPSSxLQUFLO1lBQ1osSUFBSUgsU0FBUyxTQUFTLDJCQUEyQkksSUFBSSxDQUFDRCxJQUFJRSxPQUFPLEdBQUc7Z0JBQ2xFLE9BQU9yQixNQUFNZSxLQUFLUCxTQUFTO1lBQzdCO1lBQ0EsTUFBTSxJQUFJYyxZQUFZSDtRQUN4QjtJQUNGO0lBQ0FoQixXQUFXO1FBQ1QsTUFBTSxJQUFJb0IsTUFBTTtJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXRoZW9yeS1ibG9nLy4vbm9kZV9tb2R1bGVzL2dyYXktbWF0dGVyL2xpYi9lbmdpbmVzLmpzPzY2ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB5YW1sID0gcmVxdWlyZSgnanMteWFtbCcpO1xuXG4vKipcbiAqIERlZmF1bHQgZW5naW5lc1xuICovXG5cbmNvbnN0IGVuZ2luZXMgPSBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHM7XG5cbi8qKlxuICogWUFNTFxuICovXG5cbmVuZ2luZXMueWFtbCA9IHtcbiAgcGFyc2U6IHlhbWwuc2FmZUxvYWQuYmluZCh5YW1sKSxcbiAgc3RyaW5naWZ5OiB5YW1sLnNhZmVEdW1wLmJpbmQoeWFtbClcbn07XG5cbi8qKlxuICogSlNPTlxuICovXG5cbmVuZ2luZXMuanNvbiA9IHtcbiAgcGFyc2U6IEpTT04ucGFyc2UuYmluZChKU09OKSxcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbihvYmosIG9wdGlvbnMpIHtcbiAgICBjb25zdCBvcHRzID0gT2JqZWN0LmFzc2lnbih7cmVwbGFjZXI6IG51bGwsIHNwYWNlOiAyfSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaiwgb3B0cy5yZXBsYWNlciwgb3B0cy5zcGFjZSk7XG4gIH1cbn07XG5cbi8qKlxuICogSmF2YVNjcmlwdFxuICovXG5cbmVuZ2luZXMuamF2YXNjcmlwdCA9IHtcbiAgcGFyc2U6IGZ1bmN0aW9uIHBhcnNlKHN0ciwgb3B0aW9ucywgd3JhcCkge1xuICAgIC8qIGVzbGludCBuby1ldmFsOiAwICovXG4gICAgdHJ5IHtcbiAgICAgIGlmICh3cmFwICE9PSBmYWxzZSkge1xuICAgICAgICBzdHIgPSAnKGZ1bmN0aW9uKCkge1xcbnJldHVybiAnICsgc3RyLnRyaW0oKSArICc7XFxufSgpKTsnO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGV2YWwoc3RyKSB8fCB7fTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGlmICh3cmFwICE9PSBmYWxzZSAmJiAvKHVuZXhwZWN0ZWR8aWRlbnRpZmllcikvaS50ZXN0KGVyci5tZXNzYWdlKSkge1xuICAgICAgICByZXR1cm4gcGFyc2Uoc3RyLCBvcHRpb25zLCBmYWxzZSk7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoZXJyKTtcbiAgICB9XG4gIH0sXG4gIHN0cmluZ2lmeTogZnVuY3Rpb24oKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzdHJpbmdpZnlpbmcgSmF2YVNjcmlwdCBpcyBub3Qgc3VwcG9ydGVkJyk7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsieWFtbCIsInJlcXVpcmUiLCJlbmdpbmVzIiwiZXhwb3J0cyIsIm1vZHVsZSIsInBhcnNlIiwic2FmZUxvYWQiLCJiaW5kIiwic3RyaW5naWZ5Iiwic2FmZUR1bXAiLCJqc29uIiwiSlNPTiIsIm9iaiIsIm9wdGlvbnMiLCJvcHRzIiwiT2JqZWN0IiwiYXNzaWduIiwicmVwbGFjZXIiLCJzcGFjZSIsImphdmFzY3JpcHQiLCJzdHIiLCJ3cmFwIiwidHJpbSIsImV2YWwiLCJlcnIiLCJ0ZXN0IiwibWVzc2FnZSIsIlN5bnRheEVycm9yIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/engines.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/excerpt.js":
/*!*************************************************!*\
  !*** ./node_modules/gray-matter/lib/excerpt.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst defaults = __webpack_require__(/*! ./defaults */ \"(rsc)/./node_modules/gray-matter/lib/defaults.js\");\nmodule.exports = function(file, options) {\n    const opts = defaults(options);\n    if (file.data == null) {\n        file.data = {};\n    }\n    if (typeof opts.excerpt === \"function\") {\n        return opts.excerpt(file, opts);\n    }\n    const sep = file.data.excerpt_separator || opts.excerpt_separator;\n    if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {\n        return file;\n    }\n    const delimiter = typeof opts.excerpt === \"string\" ? opts.excerpt : sep || opts.delimiters[0];\n    // if enabled, get the excerpt defined after front-matter\n    const idx = file.content.indexOf(delimiter);\n    if (idx !== -1) {\n        file.excerpt = file.content.slice(0, idx);\n    }\n    return file;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL2V4Y2VycHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUV6QkMsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLElBQUksRUFBRUMsT0FBTztJQUNyQyxNQUFNQyxPQUFPTixTQUFTSztJQUV0QixJQUFJRCxLQUFLRyxJQUFJLElBQUksTUFBTTtRQUNyQkgsS0FBS0csSUFBSSxHQUFHLENBQUM7SUFDZjtJQUVBLElBQUksT0FBT0QsS0FBS0UsT0FBTyxLQUFLLFlBQVk7UUFDdEMsT0FBT0YsS0FBS0UsT0FBTyxDQUFDSixNQUFNRTtJQUM1QjtJQUVBLE1BQU1HLE1BQU1MLEtBQUtHLElBQUksQ0FBQ0csaUJBQWlCLElBQUlKLEtBQUtJLGlCQUFpQjtJQUNqRSxJQUFJRCxPQUFPLFFBQVNILENBQUFBLEtBQUtFLE9BQU8sS0FBSyxTQUFTRixLQUFLRSxPQUFPLElBQUksSUFBRyxHQUFJO1FBQ25FLE9BQU9KO0lBQ1Q7SUFFQSxNQUFNTyxZQUFZLE9BQU9MLEtBQUtFLE9BQU8sS0FBSyxXQUN0Q0YsS0FBS0UsT0FBTyxHQUNYQyxPQUFPSCxLQUFLTSxVQUFVLENBQUMsRUFBRTtJQUU5Qix5REFBeUQ7SUFDekQsTUFBTUMsTUFBTVQsS0FBS1UsT0FBTyxDQUFDQyxPQUFPLENBQUNKO0lBQ2pDLElBQUlFLFFBQVEsQ0FBQyxHQUFHO1FBQ2RULEtBQUtJLE9BQU8sR0FBR0osS0FBS1UsT0FBTyxDQUFDRSxLQUFLLENBQUMsR0FBR0g7SUFDdkM7SUFFQSxPQUFPVDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXRoZW9yeS1ibG9nLy4vbm9kZV9tb2R1bGVzL2dyYXktbWF0dGVyL2xpYi9leGNlcnB0LmpzP2ZiY2UiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihmaWxlLCBvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSBkZWZhdWx0cyhvcHRpb25zKTtcblxuICBpZiAoZmlsZS5kYXRhID09IG51bGwpIHtcbiAgICBmaWxlLmRhdGEgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0cy5leGNlcnB0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIG9wdHMuZXhjZXJwdChmaWxlLCBvcHRzKTtcbiAgfVxuXG4gIGNvbnN0IHNlcCA9IGZpbGUuZGF0YS5leGNlcnB0X3NlcGFyYXRvciB8fCBvcHRzLmV4Y2VycHRfc2VwYXJhdG9yO1xuICBpZiAoc2VwID09IG51bGwgJiYgKG9wdHMuZXhjZXJwdCA9PT0gZmFsc2UgfHwgb3B0cy5leGNlcnB0ID09IG51bGwpKSB7XG4gICAgcmV0dXJuIGZpbGU7XG4gIH1cblxuICBjb25zdCBkZWxpbWl0ZXIgPSB0eXBlb2Ygb3B0cy5leGNlcnB0ID09PSAnc3RyaW5nJ1xuICAgID8gb3B0cy5leGNlcnB0XG4gICAgOiAoc2VwIHx8IG9wdHMuZGVsaW1pdGVyc1swXSk7XG5cbiAgLy8gaWYgZW5hYmxlZCwgZ2V0IHRoZSBleGNlcnB0IGRlZmluZWQgYWZ0ZXIgZnJvbnQtbWF0dGVyXG4gIGNvbnN0IGlkeCA9IGZpbGUuY29udGVudC5pbmRleE9mKGRlbGltaXRlcik7XG4gIGlmIChpZHggIT09IC0xKSB7XG4gICAgZmlsZS5leGNlcnB0ID0gZmlsZS5jb250ZW50LnNsaWNlKDAsIGlkeCk7XG4gIH1cblxuICByZXR1cm4gZmlsZTtcbn07XG4iXSwibmFtZXMiOlsiZGVmYXVsdHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbGUiLCJvcHRpb25zIiwib3B0cyIsImRhdGEiLCJleGNlcnB0Iiwic2VwIiwiZXhjZXJwdF9zZXBhcmF0b3IiLCJkZWxpbWl0ZXIiLCJkZWxpbWl0ZXJzIiwiaWR4IiwiY29udGVudCIsImluZGV4T2YiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/excerpt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/parse.js":
/*!***********************************************!*\
  !*** ./node_modules/gray-matter/lib/parse.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst getEngine = __webpack_require__(/*! ./engine */ \"(rsc)/./node_modules/gray-matter/lib/engine.js\");\nconst defaults = __webpack_require__(/*! ./defaults */ \"(rsc)/./node_modules/gray-matter/lib/defaults.js\");\nmodule.exports = function(language, str, options) {\n    const opts = defaults(options);\n    const engine = getEngine(language, opts);\n    if (typeof engine.parse !== \"function\") {\n        throw new TypeError('expected \"' + language + '.parse\" to be a function');\n    }\n    return engine.parse(str, opts);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL3BhcnNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUM7QUFFekJFLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxRQUFRLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUM5QyxNQUFNQyxPQUFPTixTQUFTSztJQUN0QixNQUFNRSxTQUFTVCxVQUFVSyxVQUFVRztJQUNuQyxJQUFJLE9BQU9DLE9BQU9DLEtBQUssS0FBSyxZQUFZO1FBQ3RDLE1BQU0sSUFBSUMsVUFBVSxlQUFlTixXQUFXO0lBQ2hEO0lBQ0EsT0FBT0ksT0FBT0MsS0FBSyxDQUFDSixLQUFLRTtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL25vdGlvbi10aGVvcnktYmxvZy8uL25vZGVfbW9kdWxlcy9ncmF5LW1hdHRlci9saWIvcGFyc2UuanM/MDczYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGdldEVuZ2luZSA9IHJlcXVpcmUoJy4vZW5naW5lJyk7XG5jb25zdCBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsYW5ndWFnZSwgc3RyLCBvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSBkZWZhdWx0cyhvcHRpb25zKTtcbiAgY29uc3QgZW5naW5lID0gZ2V0RW5naW5lKGxhbmd1YWdlLCBvcHRzKTtcbiAgaWYgKHR5cGVvZiBlbmdpbmUucGFyc2UgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleHBlY3RlZCBcIicgKyBsYW5ndWFnZSArICcucGFyc2VcIiB0byBiZSBhIGZ1bmN0aW9uJyk7XG4gIH1cbiAgcmV0dXJuIGVuZ2luZS5wYXJzZShzdHIsIG9wdHMpO1xufTtcbiJdLCJuYW1lcyI6WyJnZXRFbmdpbmUiLCJyZXF1aXJlIiwiZGVmYXVsdHMiLCJtb2R1bGUiLCJleHBvcnRzIiwibGFuZ3VhZ2UiLCJzdHIiLCJvcHRpb25zIiwib3B0cyIsImVuZ2luZSIsInBhcnNlIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/parse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/stringify.js":
/*!***************************************************!*\
  !*** ./node_modules/gray-matter/lib/stringify.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst typeOf = __webpack_require__(/*! kind-of */ \"(rsc)/./node_modules/kind-of/index.js\");\nconst getEngine = __webpack_require__(/*! ./engine */ \"(rsc)/./node_modules/gray-matter/lib/engine.js\");\nconst defaults = __webpack_require__(/*! ./defaults */ \"(rsc)/./node_modules/gray-matter/lib/defaults.js\");\nmodule.exports = function(file, data, options) {\n    if (data == null && options == null) {\n        switch(typeOf(file)){\n            case \"object\":\n                data = file.data;\n                options = {};\n                break;\n            case \"string\":\n                return file;\n            default:\n                {\n                    throw new TypeError(\"expected file to be a string or object\");\n                }\n        }\n    }\n    const str = file.content;\n    const opts = defaults(options);\n    if (data == null) {\n        if (!opts.data) return file;\n        data = opts.data;\n    }\n    const language = file.language || opts.language;\n    const engine = getEngine(language, opts);\n    if (typeof engine.stringify !== \"function\") {\n        throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n    }\n    data = Object.assign({}, file.data, data);\n    const open = opts.delimiters[0];\n    const close = opts.delimiters[1];\n    const matter = engine.stringify(data, options).trim();\n    let buf = \"\";\n    if (matter !== \"{}\") {\n        buf = newline(open) + newline(matter) + newline(close);\n    }\n    if (typeof file.excerpt === \"string\" && file.excerpt !== \"\") {\n        if (str.indexOf(file.excerpt.trim()) === -1) {\n            buf += newline(file.excerpt) + newline(close);\n        }\n    }\n    return buf + newline(str);\n};\nfunction newline(str) {\n    return str.slice(-1) !== \"\\n\" ? str + \"\\n\" : str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDO0FBQzFCLE1BQU1FLFdBQVdGLG1CQUFPQSxDQUFDO0FBRXpCRyxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE9BQU87SUFDM0MsSUFBSUQsUUFBUSxRQUFRQyxXQUFXLE1BQU07UUFDbkMsT0FBUVIsT0FBT007WUFDYixLQUFLO2dCQUNIQyxPQUFPRCxLQUFLQyxJQUFJO2dCQUNoQkMsVUFBVSxDQUFDO2dCQUNYO1lBQ0YsS0FBSztnQkFDSCxPQUFPRjtZQUNUO2dCQUFTO29CQUNQLE1BQU0sSUFBSUcsVUFBVTtnQkFDdEI7UUFDRjtJQUNGO0lBRUEsTUFBTUMsTUFBTUosS0FBS0ssT0FBTztJQUN4QixNQUFNQyxPQUFPVCxTQUFTSztJQUN0QixJQUFJRCxRQUFRLE1BQU07UUFDaEIsSUFBSSxDQUFDSyxLQUFLTCxJQUFJLEVBQUUsT0FBT0Q7UUFDdkJDLE9BQU9LLEtBQUtMLElBQUk7SUFDbEI7SUFFQSxNQUFNTSxXQUFXUCxLQUFLTyxRQUFRLElBQUlELEtBQUtDLFFBQVE7SUFDL0MsTUFBTUMsU0FBU1osVUFBVVcsVUFBVUQ7SUFDbkMsSUFBSSxPQUFPRSxPQUFPQyxTQUFTLEtBQUssWUFBWTtRQUMxQyxNQUFNLElBQUlOLFVBQVUsZUFBZUksV0FBVztJQUNoRDtJQUVBTixPQUFPUyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHWCxLQUFLQyxJQUFJLEVBQUVBO0lBQ3BDLE1BQU1XLE9BQU9OLEtBQUtPLFVBQVUsQ0FBQyxFQUFFO0lBQy9CLE1BQU1DLFFBQVFSLEtBQUtPLFVBQVUsQ0FBQyxFQUFFO0lBQ2hDLE1BQU1FLFNBQVNQLE9BQU9DLFNBQVMsQ0FBQ1IsTUFBTUMsU0FBU2MsSUFBSTtJQUNuRCxJQUFJQyxNQUFNO0lBRVYsSUFBSUYsV0FBVyxNQUFNO1FBQ25CRSxNQUFNQyxRQUFRTixRQUFRTSxRQUFRSCxVQUFVRyxRQUFRSjtJQUNsRDtJQUVBLElBQUksT0FBT2QsS0FBS21CLE9BQU8sS0FBSyxZQUFZbkIsS0FBS21CLE9BQU8sS0FBSyxJQUFJO1FBQzNELElBQUlmLElBQUlnQixPQUFPLENBQUNwQixLQUFLbUIsT0FBTyxDQUFDSCxJQUFJLFFBQVEsQ0FBQyxHQUFHO1lBQzNDQyxPQUFPQyxRQUFRbEIsS0FBS21CLE9BQU8sSUFBSUQsUUFBUUo7UUFDekM7SUFDRjtJQUVBLE9BQU9HLE1BQU1DLFFBQVFkO0FBQ3ZCO0FBRUEsU0FBU2MsUUFBUWQsR0FBRztJQUNsQixPQUFPQSxJQUFJaUIsS0FBSyxDQUFDLENBQUMsT0FBTyxPQUFPakIsTUFBTSxPQUFPQTtBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL25vdGlvbi10aGVvcnktYmxvZy8uL25vZGVfbW9kdWxlcy9ncmF5LW1hdHRlci9saWIvc3RyaW5naWZ5LmpzP2JiMjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlT2YgPSByZXF1aXJlKCdraW5kLW9mJyk7XG5jb25zdCBnZXRFbmdpbmUgPSByZXF1aXJlKCcuL2VuZ2luZScpO1xuY29uc3QgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZmlsZSwgZGF0YSwgb3B0aW9ucykge1xuICBpZiAoZGF0YSA9PSBudWxsICYmIG9wdGlvbnMgPT0gbnVsbCkge1xuICAgIHN3aXRjaCAodHlwZU9mKGZpbGUpKSB7XG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICBkYXRhID0gZmlsZS5kYXRhO1xuICAgICAgICBvcHRpb25zID0ge307XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgcmV0dXJuIGZpbGU7XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4cGVjdGVkIGZpbGUgdG8gYmUgYSBzdHJpbmcgb3Igb2JqZWN0Jyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc3RyID0gZmlsZS5jb250ZW50O1xuICBjb25zdCBvcHRzID0gZGVmYXVsdHMob3B0aW9ucyk7XG4gIGlmIChkYXRhID09IG51bGwpIHtcbiAgICBpZiAoIW9wdHMuZGF0YSkgcmV0dXJuIGZpbGU7XG4gICAgZGF0YSA9IG9wdHMuZGF0YTtcbiAgfVxuXG4gIGNvbnN0IGxhbmd1YWdlID0gZmlsZS5sYW5ndWFnZSB8fCBvcHRzLmxhbmd1YWdlO1xuICBjb25zdCBlbmdpbmUgPSBnZXRFbmdpbmUobGFuZ3VhZ2UsIG9wdHMpO1xuICBpZiAodHlwZW9mIGVuZ2luZS5zdHJpbmdpZnkgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleHBlY3RlZCBcIicgKyBsYW5ndWFnZSArICcuc3RyaW5naWZ5XCIgdG8gYmUgYSBmdW5jdGlvbicpO1xuICB9XG5cbiAgZGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIGZpbGUuZGF0YSwgZGF0YSk7XG4gIGNvbnN0IG9wZW4gPSBvcHRzLmRlbGltaXRlcnNbMF07XG4gIGNvbnN0IGNsb3NlID0gb3B0cy5kZWxpbWl0ZXJzWzFdO1xuICBjb25zdCBtYXR0ZXIgPSBlbmdpbmUuc3RyaW5naWZ5KGRhdGEsIG9wdGlvbnMpLnRyaW0oKTtcbiAgbGV0IGJ1ZiA9ICcnO1xuXG4gIGlmIChtYXR0ZXIgIT09ICd7fScpIHtcbiAgICBidWYgPSBuZXdsaW5lKG9wZW4pICsgbmV3bGluZShtYXR0ZXIpICsgbmV3bGluZShjbG9zZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIGZpbGUuZXhjZXJwdCA9PT0gJ3N0cmluZycgJiYgZmlsZS5leGNlcnB0ICE9PSAnJykge1xuICAgIGlmIChzdHIuaW5kZXhPZihmaWxlLmV4Y2VycHQudHJpbSgpKSA9PT0gLTEpIHtcbiAgICAgIGJ1ZiArPSBuZXdsaW5lKGZpbGUuZXhjZXJwdCkgKyBuZXdsaW5lKGNsb3NlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmICsgbmV3bGluZShzdHIpO1xufTtcblxuZnVuY3Rpb24gbmV3bGluZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5zbGljZSgtMSkgIT09ICdcXG4nID8gc3RyICsgJ1xcbicgOiBzdHI7XG59XG4iXSwibmFtZXMiOlsidHlwZU9mIiwicmVxdWlyZSIsImdldEVuZ2luZSIsImRlZmF1bHRzIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbGUiLCJkYXRhIiwib3B0aW9ucyIsIlR5cGVFcnJvciIsInN0ciIsImNvbnRlbnQiLCJvcHRzIiwibGFuZ3VhZ2UiLCJlbmdpbmUiLCJzdHJpbmdpZnkiLCJPYmplY3QiLCJhc3NpZ24iLCJvcGVuIiwiZGVsaW1pdGVycyIsImNsb3NlIiwibWF0dGVyIiwidHJpbSIsImJ1ZiIsIm5ld2xpbmUiLCJleGNlcnB0IiwiaW5kZXhPZiIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/stringify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/to-file.js":
/*!*************************************************!*\
  !*** ./node_modules/gray-matter/lib/to-file.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst typeOf = __webpack_require__(/*! kind-of */ \"(rsc)/./node_modules/kind-of/index.js\");\nconst stringify = __webpack_require__(/*! ./stringify */ \"(rsc)/./node_modules/gray-matter/lib/stringify.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/gray-matter/lib/utils.js\");\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */ module.exports = function(file) {\n    if (typeOf(file) !== \"object\") {\n        file = {\n            content: file\n        };\n    }\n    if (typeOf(file.data) !== \"object\") {\n        file.data = {};\n    }\n    // if file was passed as an object, ensure that\n    // \"file.content\" is set\n    if (file.contents && file.content == null) {\n        file.content = file.contents;\n    }\n    // set non-enumerable properties on the file object\n    utils.define(file, \"orig\", utils.toBuffer(file.content));\n    utils.define(file, \"language\", file.language || \"\");\n    utils.define(file, \"matter\", file.matter || \"\");\n    utils.define(file, \"stringify\", function(data, options) {\n        if (options && options.language) {\n            file.language = options.language;\n        }\n        return stringify(file, data, options);\n    });\n    // strip BOM and ensure that \"file.content\" is a string\n    file.content = utils.toString(file.content);\n    file.isEmpty = false;\n    file.excerpt = \"\";\n    return file;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL3RvLWZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxZQUFZRCxtQkFBT0EsQ0FBQztBQUMxQixNQUFNRSxRQUFRRixtQkFBT0EsQ0FBQztBQUV0Qjs7O0NBR0MsR0FFREcsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLElBQUk7SUFDNUIsSUFBSU4sT0FBT00sVUFBVSxVQUFVO1FBQzdCQSxPQUFPO1lBQUVDLFNBQVNEO1FBQUs7SUFDekI7SUFFQSxJQUFJTixPQUFPTSxLQUFLRSxJQUFJLE1BQU0sVUFBVTtRQUNsQ0YsS0FBS0UsSUFBSSxHQUFHLENBQUM7SUFDZjtJQUVBLCtDQUErQztJQUMvQyx3QkFBd0I7SUFDeEIsSUFBSUYsS0FBS0csUUFBUSxJQUFJSCxLQUFLQyxPQUFPLElBQUksTUFBTTtRQUN6Q0QsS0FBS0MsT0FBTyxHQUFHRCxLQUFLRyxRQUFRO0lBQzlCO0lBRUEsbURBQW1EO0lBQ25ETixNQUFNTyxNQUFNLENBQUNKLE1BQU0sUUFBUUgsTUFBTVEsUUFBUSxDQUFDTCxLQUFLQyxPQUFPO0lBQ3RESixNQUFNTyxNQUFNLENBQUNKLE1BQU0sWUFBWUEsS0FBS00sUUFBUSxJQUFJO0lBQ2hEVCxNQUFNTyxNQUFNLENBQUNKLE1BQU0sVUFBVUEsS0FBS08sTUFBTSxJQUFJO0lBQzVDVixNQUFNTyxNQUFNLENBQUNKLE1BQU0sYUFBYSxTQUFTRSxJQUFJLEVBQUVNLE9BQU87UUFDcEQsSUFBSUEsV0FBV0EsUUFBUUYsUUFBUSxFQUFFO1lBQy9CTixLQUFLTSxRQUFRLEdBQUdFLFFBQVFGLFFBQVE7UUFDbEM7UUFDQSxPQUFPVixVQUFVSSxNQUFNRSxNQUFNTTtJQUMvQjtJQUVBLHVEQUF1RDtJQUN2RFIsS0FBS0MsT0FBTyxHQUFHSixNQUFNWSxRQUFRLENBQUNULEtBQUtDLE9BQU87SUFDMUNELEtBQUtVLE9BQU8sR0FBRztJQUNmVixLQUFLVyxPQUFPLEdBQUc7SUFDZixPQUFPWDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXRoZW9yeS1ibG9nLy4vbm9kZV9tb2R1bGVzL2dyYXktbWF0dGVyL2xpYi90by1maWxlLmpzPzgxNDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlT2YgPSByZXF1aXJlKCdraW5kLW9mJyk7XG5jb25zdCBzdHJpbmdpZnkgPSByZXF1aXJlKCcuL3N0cmluZ2lmeScpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiB2YWx1ZSB0byBlbnN1cmUgYW4gb2JqZWN0IGlzIHJldHVybmVkXG4gKiB3aXRoIHRoZSBleHBlY3RlZCBwcm9wZXJ0aWVzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZmlsZSkge1xuICBpZiAodHlwZU9mKGZpbGUpICE9PSAnb2JqZWN0Jykge1xuICAgIGZpbGUgPSB7IGNvbnRlbnQ6IGZpbGUgfTtcbiAgfVxuXG4gIGlmICh0eXBlT2YoZmlsZS5kYXRhKSAhPT0gJ29iamVjdCcpIHtcbiAgICBmaWxlLmRhdGEgPSB7fTtcbiAgfVxuXG4gIC8vIGlmIGZpbGUgd2FzIHBhc3NlZCBhcyBhbiBvYmplY3QsIGVuc3VyZSB0aGF0XG4gIC8vIFwiZmlsZS5jb250ZW50XCIgaXMgc2V0XG4gIGlmIChmaWxlLmNvbnRlbnRzICYmIGZpbGUuY29udGVudCA9PSBudWxsKSB7XG4gICAgZmlsZS5jb250ZW50ID0gZmlsZS5jb250ZW50cztcbiAgfVxuXG4gIC8vIHNldCBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIG9uIHRoZSBmaWxlIG9iamVjdFxuICB1dGlscy5kZWZpbmUoZmlsZSwgJ29yaWcnLCB1dGlscy50b0J1ZmZlcihmaWxlLmNvbnRlbnQpKTtcbiAgdXRpbHMuZGVmaW5lKGZpbGUsICdsYW5ndWFnZScsIGZpbGUubGFuZ3VhZ2UgfHwgJycpO1xuICB1dGlscy5kZWZpbmUoZmlsZSwgJ21hdHRlcicsIGZpbGUubWF0dGVyIHx8ICcnKTtcbiAgdXRpbHMuZGVmaW5lKGZpbGUsICdzdHJpbmdpZnknLCBmdW5jdGlvbihkYXRhLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5sYW5ndWFnZSkge1xuICAgICAgZmlsZS5sYW5ndWFnZSA9IG9wdGlvbnMubGFuZ3VhZ2U7XG4gICAgfVxuICAgIHJldHVybiBzdHJpbmdpZnkoZmlsZSwgZGF0YSwgb3B0aW9ucyk7XG4gIH0pO1xuXG4gIC8vIHN0cmlwIEJPTSBhbmQgZW5zdXJlIHRoYXQgXCJmaWxlLmNvbnRlbnRcIiBpcyBhIHN0cmluZ1xuICBmaWxlLmNvbnRlbnQgPSB1dGlscy50b1N0cmluZyhmaWxlLmNvbnRlbnQpO1xuICBmaWxlLmlzRW1wdHkgPSBmYWxzZTtcbiAgZmlsZS5leGNlcnB0ID0gJyc7XG4gIHJldHVybiBmaWxlO1xufTtcbiJdLCJuYW1lcyI6WyJ0eXBlT2YiLCJyZXF1aXJlIiwic3RyaW5naWZ5IiwidXRpbHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiZmlsZSIsImNvbnRlbnQiLCJkYXRhIiwiY29udGVudHMiLCJkZWZpbmUiLCJ0b0J1ZmZlciIsImxhbmd1YWdlIiwibWF0dGVyIiwib3B0aW9ucyIsInRvU3RyaW5nIiwiaXNFbXB0eSIsImV4Y2VycHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/to-file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/gray-matter/lib/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/gray-matter/lib/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst stripBom = __webpack_require__(/*! strip-bom-string */ \"(rsc)/./node_modules/strip-bom-string/index.js\");\nconst typeOf = __webpack_require__(/*! kind-of */ \"(rsc)/./node_modules/kind-of/index.js\");\nexports.define = function(obj, key, val) {\n    Reflect.defineProperty(obj, key, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: val\n    });\n};\n/**\n * Returns true if `val` is a buffer\n */ exports.isBuffer = function(val) {\n    return typeOf(val) === \"buffer\";\n};\n/**\n * Returns true if `val` is an object\n */ exports.isObject = function(val) {\n    return typeOf(val) === \"object\";\n};\n/**\n * Cast `input` to a buffer\n */ exports.toBuffer = function(input) {\n    return typeof input === \"string\" ? Buffer.from(input) : input;\n};\n/**\n * Cast `val` to a string.\n */ exports.toString = function(input) {\n    if (exports.isBuffer(input)) return stripBom(String(input));\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"expected input to be a string or buffer\");\n    }\n    return stripBom(input);\n};\n/**\n * Cast `val` to an array.\n */ exports.arrayify = function(val) {\n    return val ? Array.isArray(val) ? val : [\n        val\n    ] : [];\n};\n/**\n * Returns true if `str` starts with `substr`.\n */ exports.startsWith = function(str, substr, len) {\n    if (typeof len !== \"number\") len = substr.length;\n    return str.slice(0, len) === substr;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDekIsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUM7QUFFdkJFLGNBQWMsR0FBRyxTQUFTRSxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRztJQUNyQ0MsUUFBUUMsY0FBYyxDQUFDSixLQUFLQyxLQUFLO1FBQy9CSSxZQUFZO1FBQ1pDLGNBQWM7UUFDZEMsVUFBVTtRQUNWQyxPQUFPTjtJQUNUO0FBQ0Y7QUFFQTs7Q0FFQyxHQUVESixnQkFBZ0IsR0FBRyxTQUFTSSxHQUFHO0lBQzdCLE9BQU9MLE9BQU9LLFNBQVM7QUFDekI7QUFFQTs7Q0FFQyxHQUVESixnQkFBZ0IsR0FBRyxTQUFTSSxHQUFHO0lBQzdCLE9BQU9MLE9BQU9LLFNBQVM7QUFDekI7QUFFQTs7Q0FFQyxHQUVESixnQkFBZ0IsR0FBRyxTQUFTYyxLQUFLO0lBQy9CLE9BQU8sT0FBT0EsVUFBVSxXQUFXQyxPQUFPQyxJQUFJLENBQUNGLFNBQVNBO0FBQzFEO0FBRUE7O0NBRUMsR0FFRGQsZ0JBQWdCLEdBQUcsU0FBU2MsS0FBSztJQUMvQixJQUFJZCxRQUFRVyxRQUFRLENBQUNHLFFBQVEsT0FBT2pCLFNBQVNxQixPQUFPSjtJQUNwRCxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM3QixNQUFNLElBQUlLLFVBQVU7SUFDdEI7SUFDQSxPQUFPdEIsU0FBU2lCO0FBQ2xCO0FBRUE7O0NBRUMsR0FFRGQsZ0JBQWdCLEdBQUcsU0FBU0ksR0FBRztJQUM3QixPQUFPQSxNQUFPaUIsTUFBTUMsT0FBTyxDQUFDbEIsT0FBT0EsTUFBTTtRQUFDQTtLQUFJLEdBQUksRUFBRTtBQUN0RDtBQUVBOztDQUVDLEdBRURKLGtCQUFrQixHQUFHLFNBQVN3QixHQUFHLEVBQUVDLE1BQU0sRUFBRUMsR0FBRztJQUM1QyxJQUFJLE9BQU9BLFFBQVEsVUFBVUEsTUFBTUQsT0FBT0UsTUFBTTtJQUNoRCxPQUFPSCxJQUFJSSxLQUFLLENBQUMsR0FBR0YsU0FBU0Q7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3Rpb24tdGhlb3J5LWJsb2cvLi9ub2RlX21vZHVsZXMvZ3JheS1tYXR0ZXIvbGliL3V0aWxzLmpzPzdmYmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBzdHJpcEJvbSA9IHJlcXVpcmUoJ3N0cmlwLWJvbS1zdHJpbmcnKTtcbmNvbnN0IHR5cGVPZiA9IHJlcXVpcmUoJ2tpbmQtb2YnKTtcblxuZXhwb3J0cy5kZWZpbmUgPSBmdW5jdGlvbihvYmosIGtleSwgdmFsKSB7XG4gIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IHZhbFxuICB9KTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGB2YWxgIGlzIGEgYnVmZmVyXG4gKi9cblxuZXhwb3J0cy5pc0J1ZmZlciA9IGZ1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdHlwZU9mKHZhbCkgPT09ICdidWZmZXInO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYHZhbGAgaXMgYW4gb2JqZWN0XG4gKi9cblxuZXhwb3J0cy5pc09iamVjdCA9IGZ1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdHlwZU9mKHZhbCkgPT09ICdvYmplY3QnO1xufTtcblxuLyoqXG4gKiBDYXN0IGBpbnB1dGAgdG8gYSBidWZmZXJcbiAqL1xuXG5leHBvcnRzLnRvQnVmZmVyID0gZnVuY3Rpb24oaW5wdXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycgPyBCdWZmZXIuZnJvbShpbnB1dCkgOiBpbnB1dDtcbn07XG5cbi8qKlxuICogQ2FzdCBgdmFsYCB0byBhIHN0cmluZy5cbiAqL1xuXG5leHBvcnRzLnRvU3RyaW5nID0gZnVuY3Rpb24oaW5wdXQpIHtcbiAgaWYgKGV4cG9ydHMuaXNCdWZmZXIoaW5wdXQpKSByZXR1cm4gc3RyaXBCb20oU3RyaW5nKGlucHV0KSk7XG4gIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhwZWN0ZWQgaW5wdXQgdG8gYmUgYSBzdHJpbmcgb3IgYnVmZmVyJyk7XG4gIH1cbiAgcmV0dXJuIHN0cmlwQm9tKGlucHV0KTtcbn07XG5cbi8qKlxuICogQ2FzdCBgdmFsYCB0byBhbiBhcnJheS5cbiAqL1xuXG5leHBvcnRzLmFycmF5aWZ5ID0gZnVuY3Rpb24odmFsKSB7XG4gIHJldHVybiB2YWwgPyAoQXJyYXkuaXNBcnJheSh2YWwpID8gdmFsIDogW3ZhbF0pIDogW107XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBgc3RyYCBzdGFydHMgd2l0aCBgc3Vic3RyYC5cbiAqL1xuXG5leHBvcnRzLnN0YXJ0c1dpdGggPSBmdW5jdGlvbihzdHIsIHN1YnN0ciwgbGVuKSB7XG4gIGlmICh0eXBlb2YgbGVuICE9PSAnbnVtYmVyJykgbGVuID0gc3Vic3RyLmxlbmd0aDtcbiAgcmV0dXJuIHN0ci5zbGljZSgwLCBsZW4pID09PSBzdWJzdHI7XG59O1xuIl0sIm5hbWVzIjpbInN0cmlwQm9tIiwicmVxdWlyZSIsInR5cGVPZiIsImV4cG9ydHMiLCJkZWZpbmUiLCJvYmoiLCJrZXkiLCJ2YWwiLCJSZWZsZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsImlzQnVmZmVyIiwiaXNPYmplY3QiLCJ0b0J1ZmZlciIsImlucHV0IiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiU3RyaW5nIiwiVHlwZUVycm9yIiwiYXJyYXlpZnkiLCJBcnJheSIsImlzQXJyYXkiLCJzdGFydHNXaXRoIiwic3RyIiwic3Vic3RyIiwibGVuIiwibGVuZ3RoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/gray-matter/lib/utils.js\n");

/***/ })

};
;